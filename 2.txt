EXCLUDE IN SETTINGS DECIDES WHAT FOLDERS IN VS WILL BE HIDDEN
// .gitignore folder decides what files will be ignored intentionally
git doesnt track empty folders but if we want to still track them , we make .gitkkep inside those folders

 GIT BTS 

Git Snapshots
A git snapshot is a point in time in the history of your code. It represents a specific version of your code, including all the files and folders that were present at that time. Each snapshot is identified by a unique hash code, which is a string of characters that represents the contents of the snapshot. A snapshot is not an image, itâ€™s just a representation of the code at a specific point in time. 

3 Musketeers of git
The three musketeers of git are:

Commit Object
Tree Object
Blob Object
Commit Object
Each commit in the project is stored in .git folder in the form of a commit object. A commit object contains the following information:

Tree Object
Parent Commit Object
Author
Committer
Commit Message

Tree Object
Tree Object is a container for all the files and folders in the project. It contains the following information:

File Mode
File Name
File Hash
Parent Tree Object
Everything is stored as key-value pairs in the tree object. The key is the file name and the value is the file hash.

Blob Object
Blob Object is present in the tree object and contains the actual file content. This is the place where the file content is stored.

git show -s --pretty=raw <commit-hash> -- to see tree id , parent commit id , user info , message etc 
now we can use tree id in many funcns to see tree , blob or commit -- get ls-tree <tree-id>
git show <blob-id>
git cat-file -p <commit-id>
ihdn -- changes in bug-fix